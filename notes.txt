//-set up notepad++
//-set up a midi controller and basic monitoring (aka Midi-OX)	 
//-get program from work laptop and working as-is
//-get some midi libarary(s) for python and start working with them


//-get midi output working - into MIDI-OX
	-iff necessary probably a midi loop back driver of some sort to get midi input into something useful
		try these:
			** 
			https://nerds.de/en/loopbe1.html
			https://www.tobias-erichsen.de/software/virtualmidi.html

//-?get a synth going so you can verify midi input?

-display which midi in/out ports are available	
	/-do
	-if there's a "friendly" name as well, display that


-midi in/out ports set by persistent configuration

	
-mapping that's set by config
	
-any gui
-in the gui, display something from the configuration THAT'S READ AFTER THE PROGRAM STARTS

-way to choose midi input and output
-by able to load different profiles, perhaps many at a time (one per midi in/out port pair)

-find a way to simulate midi input?
-integrate virtual midi driver & make it be added dynamically?


REFERENCES
https://wiki.python.org/moin/PythonInMusic	
https://springbeats.com/2016/12/10/springbeats-free-virtual-midi-cable/
https://github.com/mido/mido


SOME OTHER HELPFUL CODE THAT GOT ME THERE
#   print(mido.get_input_names())
#   inport = mido.open_input('Babyface Midi Port 1 0') 
# Output Ports available on my "TOWER DEV MACHINE": 
# ['Babyface Midi Port 1 1', 'Microsoft GS Wavetable Synth 0', 'Springbeats vMIDI1 2', 'Springbeats vMIDI2 3', 'Springbeats vMIDI3 4', 'Springbeats vMIDI4 5', 'Springbeats vMIDI5 6', 'Springbeats vMIDI6 7', 'Springbeats vMIDI7 8', 'Springbeats vMIDI8 9']
